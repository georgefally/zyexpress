package net.zyexpress.site.dao;

import net.zyexpress.site.api.Address;
import net.zyexpress.site.api.AddressMapper;
import net.zyexpress.site.api.IdCard;
import net.zyexpress.site.api.IdCardMapper;
import org.skife.jdbi.v2.sqlobject.Bind;
import org.skife.jdbi.v2.sqlobject.BindBean;
import org.skife.jdbi.v2.sqlobject.SqlQuery;
import org.skife.jdbi.v2.sqlobject.SqlUpdate;
import org.skife.jdbi.v2.sqlobject.customizers.Mapper;

import java.util.List;

/**
 * Created by lumengyu on 2016/5/13.
 */
public interface IdCardDAO {
    @SqlUpdate("create table if not exists IdCardItem (id int generated by default as identity, " +
            "accountName varchar(64) not null, idCardName varchar(64) not null, idCardNumber varchar(128) not null, " +
            "isApproved boolean default false)")
    void createIdCardItemTable();

    @SqlUpdate("insert into IdCardItem (accountName, idCardName, idCardNumber, isApproved ) " +
            "values(:accountName, :idCardName, :idCardNumber, 'false')")
    void addIdCardItem(@BindBean IdCard idCard);

    @SqlQuery("select * from IdCardItem where accountName = :accountName")
    @Mapper(IdCardMapper.class)
    List<IdCard> findByUserName(@Bind("accountName") String accountName);

    @SqlQuery("select accountName from IdCardItem where id = :id")
    String findByUserId(@Bind("id") int id);

    @SqlUpdate("delete from IdCardItem where id = :id")
    long deleteIdcardById(@Bind("id") int id);

    @SqlUpdate("update IdCardItem set isApproved = 'true' where id = :id")
    int updateStatus(@Bind("id") int id);
}