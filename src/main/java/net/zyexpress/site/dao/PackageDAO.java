package net.zyexpress.site.dao;

import net.zyexpress.site.api.Package;
import net.zyexpress.site.api.PackageItemMapper;
import net.zyexpress.site.api.PackageMapper;
import org.skife.jdbi.v2.sqlobject.*;
import org.skife.jdbi.v2.sqlobject.customizers.Mapper;
import org.skife.jdbi.v2.util.IntegerMapper;

import java.util.List;

public interface PackageDAO {
    @SqlUpdate("create table if not exists package (id int generated by default as identity, " +
            "accountName varchar(64) not null, weight double not null)")
    void createPackageTable();

    @SqlUpdate("create table if not exists packageItem (id int generated by default as identity, " +
            "packageId integer not null, name varchar(64) not null, brand varchar(128) not null, " +
            "specification varchar(128) null, quantity integer not null)")
    void createPackageItemTable();

    @SqlUpdate("insert into package (accountName, weight) values(:accountName, :weight)")
    @GetGeneratedKeys
    long addPackage(@BindBean Package pkg);

    @SqlUpdate("insert into packageItem (packageId, name, brand, specification, quantity) " +
            "values(:packageId, :name, :brand, :specification, :quantity)")
    void addPackageItem(@Bind("packageId") long packageId, @BindBean Package.PackageItem packageItem);

    @SqlQuery("select id from package where accountName = :searchUserName")
    @Mapper(IntegerMapper.class)
    List<Integer> searchPackages(@Bind("searchUserName") String searchUserName);

    @SqlQuery("select accountName, weight from package where id = :packageId")
    @Mapper(PackageMapper.class)
    Package searchPackageDetail(@Bind("packageId") int packageId);

    @SqlQuery("select name, brand, specification, quantity from packageItem where packageId = :packageId")
    @Mapper(PackageItemMapper.class)
    List<Package.PackageItem> searchPackageItems(@Bind("packageId") int packageId);
}
