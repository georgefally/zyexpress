package net.zyexpress.site.dao;

import net.zyexpress.site.api.*;
import net.zyexpress.site.api.Package;
import org.skife.jdbi.v2.sqlobject.*;
import org.skife.jdbi.v2.sqlobject.customizers.Mapper;

import java.util.List;

public interface AddressDAO {
    @SqlUpdate("create table if not exists addressItem (id int generated by default as identity (start with 1, increment by 1), " +
            "accountName varchar(64) not null, receiverName varchar(64) not null, phonenumber varchar(128) not null, " +
            "address varchar(128) null, postcode varchar(128) null, province varchar(128) null, city varchar(128) null, "+
            "area varchar(128) null, street varchar(128) null, isDefault boolean default false)")
    void createAddressItemTable();

    @SqlUpdate("insert into addressItem (accountName, receiverName, address, phonenumber , postcode, isDefault, province, city, area,street ) " +
            "values(:accountName, :receiverName, :address, :phoneNumber, :postcode,:default,:province, :city,:area,:street)")
    void addAddressItem(@BindBean Address address);

    @SqlUpdate("update addressItem set receiverName=:receiverName, address=:address, phonenumber=:phoneNumber , postcode=:postcode, "+
            "isDefault=:default, province=:province, city=:city, area=:area,street=:street " +
            "where id=:id ")
    void editAddressItem(@BindBean Address address);

    @SqlQuery("select * from addressItem where accountName = :accountName")
    @Mapper(AddressMapper.class)
    List<Address> findByUserName(@Bind("accountName") String accountName);

    @SqlUpdate("delete from addressItem where id = :id")
    long deleteAddressById(@Bind("id") int id);
}
